# Publish all joint states -----------------------------------
joint_state_controller:
  type: joint_state_controller/JointStateController
  publish_rate: 50

# Effort Controllers ---------------------------------------
# leftWheel_effort_controller:
  # type: effort_controllers/JointEffortController
  # joint: left_wheel_hinge
  # pid: {p: 100.0, i: 0.1, d: 10.0}
# rightWheel_effort_controller:
  # type: effort_controllers/JointEffortController
  # joint: right_wheel_hinge
  # pid: {p: 100.0, i: 0.1, d: 10.0}

# Diff Drive Controller ---------------------------------------
mobile_base_controller:
  type: diff_drive_controller/DiffDriveController
  left_wheel: ['front_left_wheel_hinge','back_left_wheel_hinge']
  right_wheel: ['front_right_wheel_hinge','back_right_wheel_hinge']
  pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
  twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
  cmd_vel_timeout: 0.25
  velocity_rolling_window_size: 2
  publish_rate: 50

  base_frame_id: base_link
  # Odometry fused with IMU is published by robot_localization, so
  # no need to publish a TF based on encoders alone.
  enable_odom_tf: false
  # hardware provides wheel velocities
  estimate_velocity_from_position: false
  # Wheel separation and radius multipliers
  wheel_separation_multiplier: 1.875 # default: 1.0
  wheel_radius_multiplier    : 1.0 # default: 1.0
  # Velocity and acceleration limits
  # Whenever a min_* is unspecified, default to -max_*
  linear:
    x:
      has_velocity_limits    : true
      max_velocity           : 1.0   # m/s
      has_acceleration_limits: true
      max_acceleration       : 3.0   # m/s^2
  angular:
    z:
      has_velocity_limits    : true
      max_velocity           : 2.0   # rad/s
      has_acceleration_limits: true
      max_acceleration       : 6.0 # rad/s^2