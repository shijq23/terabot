<?xml version="1.0"?>

<robot name="terabot" xmlns:xacro="http://www.ros.org/wiki/xacro">


  <xacro:property name="PI" value="3.1415926535897931"/>

  <xacro:property name="chassisHeight" value="0.04"/>
  <xacro:property name="chassisLength" value="0.23"/>
  <xacro:property name="chassisWidth" value="0.09"/>
  <xacro:property name="chassisMass" value="1.5"/>
  <xacro:property name="chassisLift" value="0.01"/>

  <xacro:property name="casterRadius" value="0.026"/>
  <xacro:property name="casterMass" value="0.005"/>

  <xacro:property name="wheelWidth" value="0.027"/>
  <xacro:property name="wheelRadius" value="0.032"/>
  <xacro:property name="wheelPos" value="0.03"/>
  <xacro:property name="wheelMass" value="0.1"/>

  <xacro:property name="cameraSize" value="0.02"/>
  <xacro:property name="cameraMass" value="0.1"/>

  <!--depth camera mounting position-->
  <xacro:property name="depthCameraJointHeight" value="0.15"/>

  <!-- Wheel Mounting Positions -->
  <xacro:property name="wheel_vertical_offset" value="0.015" />

  <xacro:include filename="$(find terabot_description)/urdf/terabot.gazebo" />
  <xacro:include filename="$(find terabot_description)/urdf/materials.xacro" />
  <xacro:include filename="$(find terabot_description)/urdf/macros.xacro" />

  <link name="base_link">
    <pose>0 0 ${wheelRadius} 0 0 0</pose>
    <collision>
      <origin xyz="0 0 ${wheelRadius}" rpy="0 0 0" />
      <geometry>
	      <box size="${chassisLength} ${chassisWidth + wheelWidth*2} ${chassisHeight+wheelRadius}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${wheelRadius}" rpy="0 0 0"/>
      <geometry>
	      <box size="${chassisLength} ${chassisWidth} ${chassisHeight}"/>
      </geometry>
      <material name="orange"/>
    </visual>
  </link>

  <!-- Base footprint is on the ground under the robot -->
  <link name="base_footprint"/>

  <joint name="base_footprint_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="base_footprint" />
  </joint>

  <!-- Interial link stores the robot's inertial information -->
  <link name="inertial_link">
     <inertial>
      <origin xyz="0 0 ${wheelRadius}" rpy="0 0 0"/>
      <mass value="${chassisMass}"/>
      <xacro:box_inertia m="${chassisMass}" x="${chassisLength}" y="${chassisWidth}" z="${chassisHeight}"/>
    </inertial>
  </link>

  <joint name="inertial_joint" type="fixed">
    <origin xyz="0 0 ${wheelRadius}" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="inertial_link" />
  </joint>

  <!-- depth camera -->
  <joint name="depth_camera_joint" type="fixed">
    <origin xyz="${chassisLength/2-0.1} 0 ${depthCameraJointHeight+wheelRadius+chassisHeight/2}" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>

  <link name="camera_link">
    <!--collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	      <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
      </geometry>
    </collision-->

    <!--visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
      </geometry>
      <material name="red"/>
    </visual-->
    <visual>
      <origin xyz="0 0 0" rpy="${PI/2} 0 ${PI/2}"/>
      <geometry>
          <mesh filename="package://terabot_description/meshes/d435.dae" scale="1 1 1"/>
      </geometry>
    </visual>

    <!--inertial>
      <mass value="${cameraMass}" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <xacro:box_inertia m="${cameraMass}" x="${cameraSize}" y="${cameraSize}" z="${cameraSize}" />
    </inertial-->
  </link>

  <joint name="depth_camera_optical_joint" type="fixed">
    <origin xyz="0 0 0" rpy="${-PI/2} 0 ${-PI/2}"/>
    <parent link="camera_link"/>
    <child link="depth_camera_frame_optical"/>
  </joint>

  <link name="depth_camera_frame_optical"/>

  <!-- caster wheel -->
  <!--joint name="caster_wheel_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_wheel"/>
  </joint-->

  <!--link name="caster_wheel">

    <collision>
      <origin xyz="${casterRadius-chassisLength/2} 0 ${casterRadius+0.04}" rpy="0 0 0"/>
      <geometry>
	<sphere radius="${casterRadius}"/>
      </geometry>
    </collision>
  
    <visual> 
      <origin xyz="${casterRadius-chassisLength/2} 0 ${casterRadius+0.04}" rpy="0 0 0"/>
      <geometry>
	<sphere radius="${casterRadius}"/>
      </geometry>
    </visual>

    <inertial>
      <origin xyz="${casterRadius-chassisLength/2} 0 ${casterRadius+0.04}" rpy="0 0 0"/>
      <mass value="${casterMass}"/>
      <xacro:sphere_inertia m="${casterMass}" r="${casterRadius}"/>
    </inertial>
  </link-->

  <!-- differential wheels -->
  <xacro:wheel prefix="front_left">
   <origin xyz="${-wheelPos + chassisLength/2} ${wheelWidth/2+chassisWidth/2} ${wheelRadius}" rpy="0 0 0" />
  </xacro:wheel>
  <xacro:wheel prefix="front_right">
   <origin xyz="${-wheelPos + chassisLength/2} ${-wheelWidth/2-chassisWidth/2} ${wheelRadius}" rpy="0 0 0" />
  </xacro:wheel>
  <xacro:wheel prefix="back_left">
   <origin xyz="${wheelPos -chassisLength/2} ${wheelWidth/2+chassisWidth/2} ${wheelRadius}" rpy="0 0 0" />
  </xacro:wheel>
  <xacro:wheel prefix="back_right">
   <origin xyz="${wheelPos -chassisLength/2} ${-wheelWidth/2-chassisWidth/2} ${wheelRadius}" rpy="0 0 0" />
  </xacro:wheel>

  <!-- camera -->
  <joint name="camera_joint" type="fixed">
    <origin xyz="${-cameraSize/2+chassisLength/2} 0 ${chassisHeight/2+wheelRadius+cameraSize/2}" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="camera"/>
  </joint>

  <link name="camera">
    <collision>
      <geometry>
	      <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
      </geometry>
    </collision>

    <visual>
      <geometry>
	      <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
      </geometry>
      <material name="blue"/>
    </visual>

    <!--inertial>
      <mass value="${cameraMass}" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <xacro:box_inertia m="${cameraMass}" x="${cameraSize}" y="${cameraSize}" z="${cameraSize}" />
    </inertial-->
  </link>

  <!-- imu -->
  <link name="imu_link"/>
  <joint name="imu_joint" type="fixed">
    <!--origin xyz="0.19 0 0.149" rpy="0 ${-PI/2} ${PI}" /-->
    <!--origin xyz="${-cameraSize+chassisLength/2} 0 ${cameraSize+wheelRadius+cameraSize/2}" rpy="0 ${-PI/2} ${PI}"/-->
    <origin xyz="0 0 ${cameraSize+wheelRadius+cameraSize/2}" rpy="0 0 0"/>
    <parent link="base_link" />
    <child link="imu_link" />
  </joint>

  <link name="imu_link_frame_optical"/>
  <joint name="imu_link_frame_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="imu_link"/>
    <child link="imu_link_frame_optical"/>
  </joint>
  <gazebo reference="imu_link">
  </gazebo>

</robot>
